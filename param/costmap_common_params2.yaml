# Obstacle Cost Shaping (http://wiki.ros.org/costmap_2d/hydro/inflation)
robot_radius: 0.20  # distance a circular robot should be clear of the obstacle (kobuki: 0.18)
# footprint: [[x0, y0], [x1, y1], ... [xn, yn]]  # if the robot is not circular

map_type: voxel

obstacle_layer:
    enabled:                true
    obstacle_range:         25
    raytrace_range:         30
    max_obstacle_height:    0.57
    unknown_threshold:      15
    mark_threshold:         0
    #combination_method:    1
    track_unknown_space:    true    #true needed for disabling global path planning through unknown space
    publish_voxel_map:      false

    #observation_sources:  point_cloud_sensor laser_scan_sensor
    observation_sources:  laser_scan_sensor

    laser_scan_sensor:
        sensor_frame: velodyne
        data_type: LaserScan
        topic: /scan
        marking: true
        clearing: true

#    point_cloud_sensor:
#        sensor_frame: velodyne
#        data_type: PointCloud2
#        topic: /velodyne_points
#        marking: true
#        clearing: true
#        min_obstacle_height: .20

#cost_scaling_factor and inflation_radius were now moved to the inflation_layer ns
inflation_layer:
  enabled:              true
  cost_scaling_factor:  10.0  # exponential rate at which the obstacle cost drops off (default: 10)
  inflation_radius:     0.30  # max. distance from an obstacle at which costs are incurred for planning paths.

static_layer:
  enabled:              true
